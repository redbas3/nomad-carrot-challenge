generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  password   String?
  email      String?  @unique
  bio        String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tweets   Tweet[]
  likes    Like[]
  Response Response[]
}

model Tweet {
  id         Int      @id @default(autoincrement())
  tweet      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  views      Int      @default(0)

  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  likes     Like[]
  responses Response[]
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  tweet   Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int

  @@id(name: "id", [userId, tweetId])
}

model Response {
  id Int @id @default(autoincrement())

  payload String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
}
